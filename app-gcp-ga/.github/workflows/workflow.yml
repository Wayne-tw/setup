name: CI

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: key.json
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Install And Test
        id: install-and-test
        run: ./scripts/install_and_test.sh

      - name: Build
        id: build
        run: ./scripts/build.sh

      - name: Setup GCP
        id: gcp-setup
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "270.0.0"
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: GCP Auth
        id: gcp-auth
        run: echo -n ${{ secrets.GCP_SA_KEY }} | base64 --decode > $GOOGLE_APPLICATION_CREDENTIALS
        working-directory: ./infrastructure

      - name: Setup Terraform
        id: terraform-setup
        uses: hashicorp/setup-terraform@v1.1.0
        with:
          terraform_wrapper: false

      - name: Terraform Plan and Apply
        id: terraform-plan
        working-directory: ./infrastructure
        run: |
          terraform init
          terraform fmt -check
          terraform plan -out plan.tmp
          terraform apply -auto-approve plan.tmp
          terraform output -json >> output.tmp
      - name: Deploy
        id: deploy
        env:
          TAG: ${{ github.sha }}
        run: |
          CLOUDSDK_CORE_PROJECT=$(cat infrastructure/output.tmp | jq -r ."project_id"."value")
          DOCKER_IMAGE_NAME=$(cat infrastructure/output.tmp | jq -r ."project_name"."value")
          DOCKER_IMAGE_HOST=$(cat infrastructure/output.tmp | jq -r ."gcr_domain"."value")
          DOCKER_URL="${DOCKER_IMAGE_HOST}/${CLOUDSDK_CORE_PROJECT}/${DOCKER_IMAGE_NAME}"

          echo "Building image $TAG to $DOCKER_URL, project $CLOUDSDK_CORE_PROJECT"
          gcloud auth configure-docker -q
          docker build -t ${DOCKER_IMAGE_NAME} .
          docker tag ${DOCKER_IMAGE_NAME} "${DOCKER_URL}:${TAG}"
          docker push "${DOCKER_URL}:${TAG}"
          gcloud config set project $CLOUDSDK_CORE_PROJECT
          gcloud app deploy -q --image-url ${DOCKER_URL}:${TAG}
      - name: Ping
        id: ping
        run: |
          APP_URL=$(cat infrastructure/output.tmp | jq -r ."app_hostname"."value")
          RESPONSE=$(curl -LI $APP_URL -o /dev/null -w '%{http_code}\n' -s)
          for i in {1..5}
          do
          if [ $RESPONSE == "200" ]; then
              echo "ping successful" $APP_URL $RESPONSE
              sleep 1
          else
              echo "site not responding" $APP_URL $RESPONSE
              exit 1;
          fi
          done
